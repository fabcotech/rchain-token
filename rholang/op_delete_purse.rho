new deployId(`rho:rchain:deployId`),
  returnCh,
  stdout(`rho:io:stdout`),
  deployerId(`rho:rchain:deployerId`),
  registryLookup(`rho:registry:lookup`)
in {

  for (superKey <<- @(*deployerId, "rchain-token-contract", "MASTER_REGISTRY_URI", "CONTRACT_ID")) {
    superKey!((
      "DELETE_PURSE",
      { "purseId": "PURSE_ID" },
      *returnCh
    )) |
    for (@r <- returnCh) {
      match r {
        String => {
          deployId!({ "status": "failed", "message": r }) |
          stdout!(("failed", r))
        }
        _ => {
          // OP_DELETE_PURSE_COMPLETED_BEGIN
          stdout!("completed, purse deleted") |
          deployId!({ "status": "completed" })
          // OP_DELETE_PURSE_COMPLETED_END
        }
      }
    }
  }
}
