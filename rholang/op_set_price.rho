new basket,
  sendReturnCh,
  deletePurseReturnCh,
  boxCh,
  stdout(`rho:io:stdout`),
  deployerId(`rho:rchain:deployerId`),
  registryLookup(`rho:registry:lookup`)
in {

  @(*deployerId, "rho:id:FROM_BOX_REGISTRY_URI")!(({ "type": "READ_PURSES" }, *boxCh)) |

  for (purses <- boxCh) {
    match *purses.get(`rho:id:REGISTRY_URI`).get("PURSE_ID") {
      Nil => {
        basket!({ "status": "failed", "message": "purse not found" }) |
        stdout!(("failed", "purse not found"))
      }
      purse => {
        @(purse, "SET_PRICE")!((PRICEE, *sendReturnCh)) |
        for (r <- sendReturnCh) {
          match *r {
            String => {
              basket!({ "status": "failed", "message": *r }) |
              stdout!(("failed", *r))
            }
            _ => {
              stdout!("completed, price set") |
              basket!({ "status": "completed" })
            }
          }
        }
      }
    }
  }
}
